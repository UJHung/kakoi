datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model Profile {
  id        String      @id           // 這裡可用 guestId 或 userId
  type      ProfileType @default(GUEST)
  createdAt DateTime    @default(now())
  cards     UserCard[]
}

enum ProfileType {
  GUEST
  USER
}

model UserCard {
  id          String   @id @default(cuid())
  profileId   String
  issuer      String
  productName String
  nickname    String?
  last4       String?
  createdAt   DateTime @default(now())
  // 如果想加「自訂資料」且通用：用 JSON（SQLite / Postgres 都能用）
  meta        Json?

  profile     Profile  @relation(fields: [profileId], references: [id])
  offers      CardOffer[]

  @@index([profileId])
}

model Offer {
  id           String    @id @default(cuid())
  title        String
  description  String?
  categories   Json       // 存儲分類數組，如 ["餐飲", "超商"]
  region       String?   // "台灣" | "海外"
  startDate    DateTime?
  endDate      DateTime?
  baseRate     Float?    // 基礎 %
  bonusRate    Float?    // 加碼 %
  capPerMonth  Int?      // 每月上限（$）
  minSpend     Int?      // 達檻（$）
  source       String?   // 來源連結
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  merchantId   String?   // 之後要做商店/關鍵字可再補 Merchant 表

  // 放進規則或白名單、支付工具限制（JSON 最彈性）
  meta         Json?

  cards        CardOffer[]
}

enum Category {
  一般
  餐飲
  超商
  量販
  百貨
  交通
  網購
  海外
  保費
  其他
}

model CardOffer {
  id         String   @id @default(cuid())
  userCardId String
  offerId    String
  isActive   Boolean  @default(true)

  userCard   UserCard @relation(fields: [userCardId], references: [id])
  offer      Offer    @relation(fields: [offerId], references: [id])

  @@unique([userCardId, offerId])
  @@index([userCardId])
  @@index([offerId])
}
